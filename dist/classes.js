class t{constructor(t,e,s){this.element=t,this.tab=e,this.currentTab=s}get aElem(){return this.element.querySelector("a")}get closeButton(){return this.element.querySelector(".close")}get id(){return this.tab.id}setContents(){const t=this.tab.title.trim(),e=this.tab.url,s=this.tab.favIconUrl;this.element.querySelector(".title").textContent=t,this.element.querySelector(".pathname").textContent=e,this.element.querySelector(".iconDiv > img").src=s,this.element.querySelector("a").setAttribute("id",`tab-${this.tab.id}`)}selectTab(){document.querySelectorAll(".selected").forEach((t=>{t.classList.remove("selected")})),this.element.querySelector(`#tab-${this.tab.id}`).parentElement.classList.add("selected")}async focusWindowTab(){await chrome.tabs.update(this.tab.id,{active:!0}),await chrome.windows.update(this.tab.windowId,{focused:!0})}get isCurrentTab(){return this.currentTab.id==this.tab.id}markIfCurrentTab(){this.isCurrentTab&&this.element.classList.add("current-tab")}}class e{constructor(){this.tabObjs=[],this.blacklist=new Set}add(t){this.tabObjs.push(t)}async closeTab(t){console.log(`Closing tab ${t}.`);const e=this.tabObjs.findIndex((function(e){return e.id===t}));this.tabObjs[e].isCurrentTab&&!confirm("This is the current tab! Are you sure you want to close it?")||(this.tabObjs.splice(e,1),await chrome.tabs.remove(t),document.querySelector(`#tab-${t}`).parentElement.remove())}showAll(){const t=function*(){for(const t of this.tabObjs)yield t.element}.bind(this),e=new Set([...t()]);document.querySelector("#tabListUl").append(...e)}clearElems(){document.querySelector("body > ul").innerHTML="",this.tabObjs=[]}async purgeDisplayed(){const t=function*(){for(const t of this.tabObjs)yield t.id}.bind(this);for(const e of[...t()])await this.closeTab(e)}addToBlacklist(t){this.blacklist.add(t)}removeFromBlacklist(t){this.blacklist.delete(t)}}export{t as Tab,e as TabContainer};